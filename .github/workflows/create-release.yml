name: Create Release
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    container: node:16
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - run: npm ci
      - run: npm run build

  create-release:
    runs-on: ubuntu-latest
    container: tokenydev/github-runner:latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Get release tag
        shell: bash
        run: |
          echo "Getting release tag"
          export RELEASE_TAG=$(grep version package.json | awk -F '"' '{print $4}')
          echo "RELEASE_TAG=$(grep version package.json | awk -F '"' '{print $4}')" >> $GITHUB_ENV
          git fetch --prune --tags
          echo $RELEASE_TAG
          git tag
          export NEW_RELEASE=$((git tag | grep $RELEASE_TAG) || echo true)
          echo "NEW_RELEASE=$((git tag | grep $RELEASE_TAG) || echo true)" >> $GITHUB_ENV
          echo "::set-output name=new_release::$NEW_RELEASE"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          release_name: ${{ env.RELEASE_TAG }}
        if: contains(env.NEW_RELEASE, 'true')

  publish-npm:
    runs-on: ubuntu-latest
    container: node:16
    needs: create-release
    if: contains(needs.create-release.outputs.new_release, 'true')
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com/
          scope: '@tokenyico'
      - run: npm ci
      - run: npm run build
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
